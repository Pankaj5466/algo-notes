

== THE BIG PICTURE == 

# QUESTIONS
a. What is a metrics monitoring and alterting system?
b. Why do we really need this type of system? 
c. what are the major component of these type of system?
d. the types of things we should consider when designing the system. (aka design scope)
e. Draw HLD and explain various system envolved.
     - 5 main parts : data-collection, data-transmision, data-storage, data-processing(data-processing + data-visualization)
     - 

f. How we will be storing and structing our data?
g. How does the all metrics data gets storage so that query is efficent and it does not take a lot of space wastage(billing reduction).
SQL vs NoSQL vs fileSystem vs time-series DB.

h. ready



# ANSWERS

a. 
A well-designed monitoring and alerting system plays a key role in porviding clear visible into the health of the infrastrucuture to ensure hight avilability and relibility.

b. 
we need such type of system because it helps track the health of our running infrastrucuture. Health can include active information like is the server up?, how many server are on for the current db. And it can also include passing information like what was the peak user in previous year. It also helps in debug the application and quicklu fix the system in case of system crash or urgent issue like ddos attack, repeated payment failure etc.

c. 
As this is helper tool for monitoring the system. The main component in this has to be data-collection, data-retention, data-search and alarm-generation.

We need to collect data in a scalable way so that machine can be added or deleted to the monitoring_system. In case of server-auto-scale,the monitoring-server should handle the changes also.

The server should also support search from logs for debugging purpose. Also, as we need to search from logs we need to take care of how we will store the inforamation in persistent memory. (db|file|json|folder/file)

d.
This is same as defining the design scope and aggregging what is under the scope current development.
As we are desiging the monitoring and altering system, we can as following questions:
ref:p132





== sub-system in depth ==
a. Metrics Collections


== Filtering Most Important ==

# QUESTIONS

a. Estimate the write-per-sec, read-per-sec, query-per-sec and other numerics for server load estimation. And for estimation of how big storage we will need.
b. name some time series data. list the originator of folloing time-series data.OpenTSDB, MetricsDB, influxDb, Prometheus.
c. Reason why SQL and NoSQL will not be a preferred choice for metrics-system's data-storage.

# ANSWERS

b. 
OpenTSDB is a distrubuted time-series database based on Hadoop and HBase.
Twitter uses MetricsDB, Amazon offers Timestream.

InfluxDB and Prometheus are two most preferred  time series database to store large volumes of data and quicklu perform real-time analysis on the data. Both of these rely on in-memory cache and on-disk storage. As a performace benchmark: InfluxDB with 8cores and 32GB RAM can halde over 250k writes per second!

c. 
A relational database is not optimized for operations on time-series data. For example rolling time window in sql will lead to a complex sql query and performance. + A general purpose relational database does not perform well under heavy-write load.

NoSQL can be used, but we will need to focus a lot on the schema desing and we will be depedning a lot upon the internal working of the choses NoSQL database for performance optimization of our system.

Due to which, its better to chose industrial-scale time-series database which are readily available.





